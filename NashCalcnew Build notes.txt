I got the meta auth to work in the previous project/fold 'ethnashcalproj' now I will work to bridge them by creating a server file and intergrating the meta auth that will talk to it from teh client end. 
**********
April 7th

got the app up and running with lite-server, now to create my own server file it hink. 

Server is working and so is the app.  I notice now there is creatd a static public folder which obviously holds what the client can see.  So I need to move the data and the processing code to the server side to hide it from the customer.  I will do that after I get meta mask working and the code cleaned etc.

Right on, meta mask pops up.  

Now get the api request and to match it with the meta mask public address. 

*****

april 8

working with the api so far: http://api.etherscan.io/api?module=account&action=txlist&address=0x86Fa049857E0209aa7D9e616F7eb3b3B78ECfdb0
&startblock=0&endblock=99999999&sort=asc&apikey=ZBNU9HGBQNG1T8ASTYMB95ANZJFYJMZN2I

works just need to adjust the start block to keep the data small.

now to query the api with jsnode (works!)

rinkeby api: 

request('https://api-rinkeby.etherscan.io/api?module=account&action=txlist&address=0x4239587333661f3761cbC45ef0A4CBf24417Ae53&startblock=2076060&endblock=99999999&sort=asc&apikey=ZBNU9HGBQNG1T8ASTYMB95ANZJFYJMZN2I', function (error, response, body) {

send a tx to a random rinkeby contract works for the api.  

adding $ npm install json-query

I didn't use the above package I found the address using a for loop etc. 
Now to put this in the verify to compare it with the verified address 

logs seem to check out that the metamask signature is matching a found address in the contract

****

now i have to move some of the code server side, basically the search for data. So the user sends their inputs and the server private calls the search function and returns the outputs.

so the function "get ranges" is server side and sends the outputs to the two print functions which are client side. 

function 'get inputs' i think is server side and reicieve the inputs which calls gets ranges. 

I have to set the get request up to send the data with it for the inputs that are selected. I think i do this with ajax https://stackoverflow.com/questions/15576548/how-to-pass-parameters-in-get-requests-with-jquery and a function connected to the calculate button.  Load data I guess. 

Ya, send an ajax request from load data and the rest of the client code i have goes server for now until the outputs come back. Perhaps this request stays open for that time?

i have the button click calling the java script and I think i am passing in "data" now just need to figure out how to recover the data. 

crazy i found this i think its exactly what i need : https://www.youtube.com/watch?v=Sb8xyCa2p7A 

basically I think i have it. that video showed how to add inputs to a get request, they are appending and naturally parsed etc. or easily. 

It's working and now for the function to call the outputs to get it working from the server side and to remove the java.  probably it will be all on this one page but i might try to get module to work. 

handlebars will render the view live etc. 

view is working but not meta auth.  I will make a back up users.js and take out the ajax functions.  once it works i will change the functions to work on server side and out to the handbars {{{body}}}

ok its working i just had to add: 

//routes not needed 
app.use('/', routes);
app.use('/', users);

routes IS needed ;P

im taking out the seperated functions because i can only make on response i believe.  I must combine the calls to the print the ranges.  To do this I am making global output variables so I can make only one print function call instead of two. 

 // globally declared in order take out seperating functions
  var minR = '';
  var threebet  = '';
  var callthreebet = '';
 var shoveParam = '';
  var callrangeParam = '';

     minR = TempTwo;
             threebet = Temp;
             callthreebet = tempThree;


there were two res. in the router.get('/auth/:MetaMessage/:MetaSignature/:antes/:position/:effectiveBbs/:icmCev call

the user is getting an authorization response and also the output data.  I'll have to combine them or take out the authorization response perhaps?

I realize res.send(req.metaAuth.recovered); was before much of the code and so im not sure or if it was responding properly .  I put a copy of the line right above the other res.render.

Ok I was having problems with the api call, its not async and so i had to re-encapsulte the code that needs the queried api address.

still not getting a rendering output for the index. or can't render to output.  I commented out the res if tree on the layout page in the script tags

can't figure out why it won't redirect so i can't even trouble shoot handlebars. it might be because the client is not expecting a redirect (the syntax is new for me) but i realize i can pass the outputs through  res.send and then render them client side, and it in fact worked. 


i changed the port forwarding to send ip requests to my computer on port 3001.  website came up but not meta mask...

i just needed to update the client index.html js script to use my ip rather than local host





